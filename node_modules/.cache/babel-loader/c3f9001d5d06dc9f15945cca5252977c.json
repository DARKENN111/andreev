{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darke\\\\donates-andreev\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Start from './panels/Home';\nimport Select from './panels/Select';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/order/:areaId/:itemId\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Order, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    setActiveOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'ACTIVE';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/basket/:areaId/:itemId\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Basket, {\n    foodAreas: FOOD_AREAS,\n    order: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/orders\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Orders, {\n    order: order,\n    orderStatuses: orderStatuses,\n    foodAreas: FOOD_AREAS,\n    setFinishedOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'DONE';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    setCanceledOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'CANCELED';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    setActiveOrder: ({\n      itemId\n    }) => {\n      const nextStatuses = { ...orderStatuses\n      };\n      nextStatuses[itemId] = 'ACTIVE';\n      setOrderStatuses(nextStatuses);\n      localStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/place/:area/:place\",\n    render: routeProps => {\n      return /*#__PURE__*/React.createElement(Place, Object.assign({}, routeProps, {\n        item: placesMap[routeProps.location.pathname],\n        area: FOOD_AREAS[0],\n        order: order,\n        onIncrementPosition: ({\n          id,\n          itemId,\n          areaId\n        }) => {\n          const updatedOrder = { ...order\n          };\n\n          if (id in updatedOrder) {\n            updatedOrder[id].count++;\n          } else {\n            updatedOrder[id] = {\n              item: foodsMap[id],\n              count: 1\n            };\n          }\n\n          let nextOrderStatuses = { ...orderStatuses\n          };\n\n          if (Object.keys(nextOrderStatuses).length === 0) {\n            FOOD_AREAS.forEach(area => {\n              area.items.forEach(item => {\n                item.foods.forEach(food => {\n                  if (food.id in order) {\n                    const status = item.id === itemId ? 'ACTIVE' : 'DONE';\n                    nextOrderStatuses[item.id] = status;\n                  }\n                });\n              });\n            });\n          }\n\n          const serialized = JSON.stringify(updatedOrder);\n          localStorage.setItem('orders', serialized);\n          localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n          setOrder(updatedOrder);\n          setOrderStatuses(nextOrderStatuses);\n        },\n        onDecrementPosition: ({\n          id,\n          itemId,\n          areaId\n        }) => {\n          const updatedOrder = { ...order\n          };\n\n          if (id in updatedOrder) {\n            if (updatedOrder[id].count === 1) {\n              delete updatedOrder[id];\n            } else {\n              updatedOrder[id].count--;\n            }\n          }\n\n          let nextOrderStatuses = { ...orderStatuses\n          };\n\n          if (Object.keys(nextOrderStatuses).length === 0) {\n            FOOD_AREAS.forEach(area => {\n              area.items.forEach(item => {\n                item.foods.forEach(food => {\n                  if (food.id in order) {\n                    const status = item.id === itemId ? 'ACTIVE' : 'DONE';\n                    nextOrderStatuses[item.id] = status;\n                  }\n                });\n              });\n            });\n          }\n\n          const serialized = JSON.stringify(updatedOrder);\n          localStorage.setItem('orders', serialized);\n          localStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n          setOrder(updatedOrder);\n          setOrderStatuses(nextOrderStatuses);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/darke/donates-andreev/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Start","Select","Place","Basket","Order","Orders","kfc","burger","mcdac","sub","OneTowar","TwoTowar","ThreeTowar","FourTowar","App","FOOD_AREAS","order","itemId","nextStatuses","orderStatuses","setOrderStatuses","localStorage","setItem","JSON","stringify","routeProps","placesMap","location","pathname","id","areaId","updatedOrder","count","item","foodsMap","nextOrderStatuses","Object","keys","length","forEach","area","items","foods","food","status","serialized","setOrder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Start from './panels/Home';\nimport Select from './panels/Select';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\n\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\nconst App = () => {\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Home foodAreas={FOOD_AREAS} order={order} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/order/:areaId/:itemId\" exact>\n\t\t\t\t\t<Order\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/basket/:areaId/:itemId\" exact>\n\t\t\t\t\t<Basket\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/orders\"\n\t\t\t\t\texact\n\t\t\t\t>\n\t\t\t\t\t<Orders \n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderStatuses={orderStatuses}\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\tsetFinishedOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'DONE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetCanceledOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'CANCELED';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route \n\t\t\t\t\tpath=\"/place/:area/:place\"\n\t\t\t\t\trender={routeProps => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Place\n\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\titem={placesMap[routeProps.location.pathname]}\n\t\t\t\t\t\t\t\tarea={FOOD_AREAS[0]}\n\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\tonIncrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count++;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id] = {\n\t\t\t\t\t\t\t\t\t\t\titem: foodsMap[id],\n\t\t\t\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDecrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tif (updatedOrder[id].count === 1) {\n\t\t\t\t\t\t\t\t\t\t\tdelete updatedOrder[id];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}