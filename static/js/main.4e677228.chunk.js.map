{"version":3,"sources":["panels/Start.js","panels/Select.js","panels/Target_fee.js","panels/Regular_fee.js","panels/More.js","App.js","index.js"],"names":["Start","Fragment","className","type","value","onClick","document","location","href","Select","width","height","viewBox","fill","xmlns","d","Target","useState","setType","placeholder","list","onChange","event","target","id","onToggle","alert","Regular","More","name","setName","checked","setChecked","date","setDate","for","disabled","App","path","exact","connect","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4e677228.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport './Start.css';\n\nconst Start = () => (\n  <React.Fragment>      \n      <div className=\"header\">\n        <p className=\"header-text\">Пожертвования</p>\n      </div>\n      <div className=\"main\">\n      <p className=\"main-text\">У Вас пока нет сборов.</p>\n      <p className=\"main-text\">Начните доброе дело.</p>\n        <input type=\"button\" value=\"Создать сбор\" className=\"start-btn\"\n        onClick={() => { \n          document.location.href = \"/select\"\n        }}/>\n      </div>\n  </React.Fragment>\n);\n\nexport default Start;\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Select.css';\r\n\r\nconst Select = () => (\r\n  <React.Fragment>\r\n      <div className=\"main\">\r\n\r\n      <div className=\"buttons\">\r\n        <div className=\"button\">\r\n          <div className=\"image\">\r\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M12 0C12.5523 0 13 0.447715 13 1L13.0011 2.04948C17.725 2.51902 21.4815 6.2759 21.9506 10.9999L23 11C23.5523 11 24 11.4477 24 12C24 12.5523 23.5523 13 23 13L21.9505 13.0011C21.481 17.7246 17.7246 21.481 13.0011 21.9505L13 23C13 23.5523 12.5523 24 12 24C11.4477 24 11 23.5523 11 23L10.9999 21.9506C6.2759 21.4815 2.51902 17.725 2.04948 13.0011L1 13C0.447715 13 0 12.5523 0 12C0 11.4477 0.447715 11 1 11L2.04939 10.9999C2.51849 6.27556 6.27556 2.51849 10.9999 2.04939L11 1C11 0.447715 11.4477 0 12 0ZM13.001 4.06201L13 5C13 5.55228 12.5523 6 12 6C11.4477 6 11 5.55228 11 5L11 4.06189C7.38129 4.51312 4.51312 7.38129 4.06189 11L5 11C5.55228 11 6 11.4477 6 12C6 12.5523 5.55228 13 5 13L4.06201 13.001C4.51365 16.6192 7.38163 19.4869 11 19.9381L11 19C11 18.4477 11.4477 18 12 18C12.5523 18 13 18.4477 13 19L13.001 19.938C16.6189 19.4864 19.4864 16.6189 19.938 13.001L19 13C18.4477 13 18 12.5523 18 12C18 11.4477 18.4477 11 19 11L19.9381 11C19.4869 7.38163 16.6192 4.51365 13.001 4.06201ZM12 10C13.1046 10 14 10.8954 14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10Z\" fill=\"#3F8AE0\"/>\r\n            </svg>\r\n          </div>\r\n        <div>\r\n          <p className=\"header-text\">Целевой сбор</p>\r\n          <p className=\"under-header-text\">Когда есть определенная цель</p>\r\n         </div>\r\n          <div className=\"image image-right\"\r\n          onClick={() => { \r\n          document.location.href = \"/Target\"\r\n        }}>\r\n            <svg width=\"11\" height=\"18\" viewBox=\"0 0 11 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M7.23223 9L1.11612 2.88388C0.627961 2.39573 0.627961 1.60427 1.11612 1.11612C1.60427 0.627961 2.39573 0.627961 2.88388 1.11612L9.88388 8.11612C10.372 8.60427 10.372 9.39573 9.88388 9.88388L2.88388 16.8839C2.39573 17.372 1.60427 17.372 1.11612 16.8839C0.627961 16.3957 0.627961 15.6043 1.11612 15.1161L7.23223 9Z\" fill=\"#B8C1CC\"/>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <div className=\"button\">\r\n          <div className=\"image\">\r\n            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M16 0C16.5523 0 17 0.447715 17 1L17.0007 2.15982C17.8406 2.29344 18.3843 2.50928 18.9305 2.8014C19.9083 3.32432 20.6757 4.09168 21.1986 5.06946C21.6737 5.95778 21.947 6.83957 21.993 8.99907L22 9V16.3083L21.9947 16.9184C21.9539 19.1381 21.6797 20.031 21.1986 20.9305C20.6757 21.9083 19.9083 22.6757 18.9305 23.1986C17.9528 23.7215 16.9829 24 14.3083 24H7.69166L7.08162 23.9947C4.86187 23.9539 3.96902 23.6797 3.06946 23.1986C2.09169 22.6757 1.32432 21.9083 0.801398 20.9305C0.299394 19.9919 0.0226692 19.0605 0.00133443 16.6212L0 9.69166V9C0.0530014 6.83957 0.326319 5.95778 0.801398 5.06946C1.32432 4.09168 2.09169 3.32432 3.06946 2.8014C3.61591 2.50916 4.15988 2.29326 5.00031 2.15965L5 1C5 0.447715 5.44772 0 6 0C6.55228 0 7 0.447715 7 1L6.99907 2.00697C7.21654 2.00233 7.44696 2 7.69166 2H14.3083C14.5534 2 14.7842 2.00234 15.0019 2.00699L15 1C15 0.447715 15.4477 0 16 0ZM19.999 11H2L2.00092 16.5913L2.00977 17.1601C2.04865 18.6673 2.2079 19.3196 2.56502 19.9873C2.90155 20.6166 3.38342 21.0985 4.01266 21.435C4.75898 21.8341 5.48594 21.9861 7.40871 21.9991H14.5913L15.1601 21.9902C16.6673 21.9514 17.3196 21.7921 17.9873 21.435C18.6166 21.0985 19.0985 20.6166 19.435 19.9873C19.8341 19.241 19.9861 18.5141 19.9991 16.5913L19.999 11ZM16.046 16C16.4788 16 16.8196 16.0812 17.1047 16.2337C17.3899 16.3863 17.6137 16.6101 17.7663 16.8953C17.9188 17.1804 18 17.5212 18 17.954V18.046C18 18.4788 17.9188 18.8196 17.7663 19.1047C17.6137 19.3899 17.3899 19.6137 17.1047 19.7663C16.8196 19.9188 16.4788 20 16.046 20H15.954C15.5212 20 15.1804 19.9188 14.8953 19.7663C14.6101 19.6137 14.3863 19.3899 14.2337 19.1047C14.0812 18.8196 14 18.4788 14 18.046V17.954C14 17.5212 14.0812 17.1804 14.2337 16.8953C14.3863 16.6101 14.6101 16.3863 14.8953 16.2337C15.1804 16.0812 15.5212 16 15.954 16H16.046ZM14.5913 4.00092H7.40871L7 4.006V5C7 5.55228 6.55228 6 6 6C5.44772 6 5 5.55228 5 5L4.99925 4.19251C4.61856 4.28042 4.31722 4.40214 4.01266 4.56502C3.38342 4.90155 2.90155 5.38342 2.56502 6.01266C2.1956 6.70342 2.03791 7.37759 2.00618 8.99864L19.993 9L19.9902 8.83985C19.9514 7.33268 19.7921 6.68042 19.435 6.01266C19.0985 5.38342 18.6166 4.90155 17.9873 4.56502C17.6829 4.40218 17.3816 4.28048 17.001 4.19257L17 5C17 5.55228 16.5523 6 16 6C15.4477 6 15 5.55228 15 5L15.0024 4.0062C14.8717 4.00364 14.7348 4.00189 14.5913 4.00092Z\" fill=\"#3F8AE0\"/>\r\n            </svg>\r\n          </div>\r\n        <div>\r\n          <p className=\"header-text\">Регулярный сбор</p>\r\n          <p className=\"under-header-text\">Если помощь нужна ежемесячно</p>\r\n         </div>\r\n          <div className=\"image image-right\"\r\n          onClick={() => { \r\n          document.location.href = \"/Regular\"\r\n        }}>\r\n            <svg width=\"11\" height=\"18\" viewBox=\"0 0 11 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M7.23223 9L1.11612 2.88388C0.627961 2.39573 0.627961 1.60427 1.11612 1.11612C1.60427 0.627961 2.39573 0.627961 2.88388 1.11612L9.88388 8.11612C10.372 8.60427 10.372 9.39573 9.88388 9.88388L2.88388 16.8839C2.39573 17.372 1.60427 17.372 1.11612 16.8839C0.627961 16.3957 0.627961 15.6043 1.11612 15.1161L7.23223 9Z\" fill=\"#B8C1CC\"/>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  </React.Fragment>\r\n);\r\n\r\n\r\nexport default Select;\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Target.css';\r\n\r\nconst Target = () => {\r\n  const [ type, setType ] = useState('');\r\n\r\n  return (\r\n  <React.Fragment>\r\n      <div className=\"main-target\">\r\n        <div className=\"load-photo\">\r\n          <div className=\"load-text\">\r\n            <div className=\"image\">\r\n              <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M13.3083 0C15.8978 0 17.1262 0.237232 18.4021 0.919585C19.5542 1.53571 20.4643 2.44582 21.0804 3.59786C21.7628 4.87375 22 6.10224 22 8.69166V13.3083C22 15.8978 21.7628 17.1262 21.0804 18.4021C20.4643 19.5542 19.5542 20.4643 18.4021 21.0804C17.1262 21.7628 15.8978 22 13.3083 22H8.69166C6.10224 22 4.87375 21.7628 3.59786 21.0804C2.44582 20.4643 1.53571 19.5542 0.919585 18.4021C0.237232 17.1262 0 15.8978 0 13.3083V8.69166C0 6.10224 0.237232 4.87375 0.919585 3.59786C1.53571 2.44582 2.44582 1.53571 3.59786 0.919585C4.87375 0.237232 6.10224 0 8.69166 0H13.3083ZM14.9791 12.4419L10.7771 17.6294C10.426 18.0628 9.78827 18.1253 9.35982 17.7682L7.06137 15.8528L3.96323 18.9516C4.14411 19.0857 4.33681 19.2076 4.54106 19.3168C5.4876 19.823 6.40417 20 8.69166 20H13.3083C15.5958 20 16.5124 19.823 17.4589 19.3168C18.2624 18.8871 18.8871 18.2624 19.3168 17.4589C19.4637 17.1842 19.5829 16.9121 19.6781 16.6082L14.9791 12.4419ZM13.3083 2H8.69166C6.40417 2 5.4876 2.177 4.54106 2.68321C3.73755 3.11293 3.11293 3.73755 2.68321 4.54106C2.177 5.4876 2 6.40417 2 8.69166V13.3083C2 15.5652 2.17229 16.4876 2.66305 17.4209L6.29289 13.7929C6.65861 13.4272 7.24286 13.4007 7.64018 13.7318L9.8612 15.5826L14.0831 10.3706C14.4417 9.92784 15.0972 9.87376 15.5236 10.2517L19.9887 14.2102C19.9964 13.9349 20 13.6356 20 13.3083V8.69166C20 6.40417 19.823 5.4876 19.3168 4.54106C18.8871 3.73755 18.2624 3.11293 17.4589 2.68321C16.5124 2.177 15.5958 2 13.3083 2ZM7.5 6C8.32843 6 9 6.67157 9 7.5C9 8.32843 8.32843 9 7.5 9C6.67157 9 6 8.32843 6 7.5C6 6.67157 6.67157 6 7.5 6Z\" fill=\"#3F8AE0\"/>\r\n              </svg>\r\n            </div>\r\n            <p className=\"text\">Загрузить обложку</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"form\">\r\n        <div>\r\n          <p className=\"form-text\">Название сбора</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"Название сбора\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Сумма, ₽</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"Сколько нужно собрать?\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Цель</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"Например, лечение человека\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Описание</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"На что пойдут деньги и как они кому-то помогут?\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Куда получать деньги</p>\r\n\r\n          <input type=\"text\" list=\"types\" className=\"form-input\" value={type}\r\n          onChange={event => {\r\n              setType(event.target.value);\r\n            }}/>\r\n          <datalist id=\"types\">\r\n             <option value=\"Счет VK PAY • 1234\" onToggle={() => { setType('Счет VK PAY • 1234');}}/>\r\n             <option value=\"На карту • 9314\" onToggle={() => { setType('На карту • 9314'); }}/>\r\n          </datalist>\r\n        </div>\r\n        </div>\r\n        <footer className=\"Place__footer\">\r\n            <input type=\"button\" value=\"Далее\"className=\"form-button\" onClick={() => { if(type !== \"Счет VK PAY • 1234\" && type !== \"На карту • 9314\"){alert(\"error\" + type);}else{document.location.href = \"/More\"}}}/>\r\n        </footer>\r\n      </div>\r\n  </React.Fragment>\r\n);\r\n};\r\n\r\n\r\nexport default Target;\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Target.css';\r\n\r\nconst Regular = () => {\r\n  const [ type, setType ] = useState('');\r\n\r\n  return (\r\n  <React.Fragment>\r\n      <div className=\"main-target\">\r\n        <div className=\"load-photo\">\r\n          <div className=\"load-text\">\r\n            <div className=\"image\">\r\n              <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M13.3083 0C15.8978 0 17.1262 0.237232 18.4021 0.919585C19.5542 1.53571 20.4643 2.44582 21.0804 3.59786C21.7628 4.87375 22 6.10224 22 8.69166V13.3083C22 15.8978 21.7628 17.1262 21.0804 18.4021C20.4643 19.5542 19.5542 20.4643 18.4021 21.0804C17.1262 21.7628 15.8978 22 13.3083 22H8.69166C6.10224 22 4.87375 21.7628 3.59786 21.0804C2.44582 20.4643 1.53571 19.5542 0.919585 18.4021C0.237232 17.1262 0 15.8978 0 13.3083V8.69166C0 6.10224 0.237232 4.87375 0.919585 3.59786C1.53571 2.44582 2.44582 1.53571 3.59786 0.919585C4.87375 0.237232 6.10224 0 8.69166 0H13.3083ZM14.9791 12.4419L10.7771 17.6294C10.426 18.0628 9.78827 18.1253 9.35982 17.7682L7.06137 15.8528L3.96323 18.9516C4.14411 19.0857 4.33681 19.2076 4.54106 19.3168C5.4876 19.823 6.40417 20 8.69166 20H13.3083C15.5958 20 16.5124 19.823 17.4589 19.3168C18.2624 18.8871 18.8871 18.2624 19.3168 17.4589C19.4637 17.1842 19.5829 16.9121 19.6781 16.6082L14.9791 12.4419ZM13.3083 2H8.69166C6.40417 2 5.4876 2.177 4.54106 2.68321C3.73755 3.11293 3.11293 3.73755 2.68321 4.54106C2.177 5.4876 2 6.40417 2 8.69166V13.3083C2 15.5652 2.17229 16.4876 2.66305 17.4209L6.29289 13.7929C6.65861 13.4272 7.24286 13.4007 7.64018 13.7318L9.8612 15.5826L14.0831 10.3706C14.4417 9.92784 15.0972 9.87376 15.5236 10.2517L19.9887 14.2102C19.9964 13.9349 20 13.6356 20 13.3083V8.69166C20 6.40417 19.823 5.4876 19.3168 4.54106C18.8871 3.73755 18.2624 3.11293 17.4589 2.68321C16.5124 2.177 15.5958 2 13.3083 2ZM7.5 6C8.32843 6 9 6.67157 9 7.5C9 8.32843 8.32843 9 7.5 9C6.67157 9 6 8.32843 6 7.5C6 6.67157 6.67157 6 7.5 6Z\" fill=\"#3F8AE0\"/>\r\n              </svg>\r\n            </div>\r\n            <p className=\"text\">Загрузить обложку</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"form\">\r\n        <div>\r\n          <p className=\"form-text\">Название сбора</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"Название сбора\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Сумма, ₽</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"Сколько нужно собрать?\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Цель</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"Например, лечение человека\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Описание</p>\r\n          <input type=\"text\" className=\"form-input\" placeholder=\"На что пойдут деньги и как они кому-то помогут?\"/>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Куда получать деньги</p>\r\n\r\n          <input type=\"text\" list=\"types\" className=\"form-input\" value={type}\r\n          onChange={event => {\r\n              setType(event.target.value);\r\n            }}/>\r\n          <datalist id=\"types\">\r\n             <option value=\"Счет VK PAY • 1234\" onToggle={() => { setType('Счет VK PAY • 1234');}}/>\r\n             <option value=\"На карту • 9314\" onToggle={() => { setType('На карту • 9314'); }}/>\r\n          </datalist>\r\n        </div>\r\n        </div>\r\n        <footer className=\"Place__footer\">\r\n            <input type=\"button\" value=\"Создать сбор\" className=\"form-button\" onClick={() => { if(type !== \"Счет VK PAY • 1234\" && type !== \"На карту • 9314\"){alert(\"error\" + type);}else{document.location.href = \"/\"}}}/>\r\n        </footer>\r\n      </div>\r\n  </React.Fragment>\r\n);\r\n};\r\n\r\n\r\nexport default Regular;\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './More.css';\r\n\r\nconst More = () => {\r\n    const [ name, setName ] = useState('');\r\n    const [ checked, setChecked ] = useState(false);\r\n    const [ date, setDate ] = useState('');\r\n\r\nif (date !== \"\" && name !== \"\") {\r\n  return (\r\n  <React.Fragment>\r\n      <div className=\"main-more\">\r\n        <div>\r\n          <p className=\"form-text\">Автор</p>\r\n          <input type=\"text\" list=\"names\" className=\"form-input\" value={name}\r\n          onChange={event => {\r\n              setName(event.target.value);\r\n            }}/>\r\n          <datalist id=\"names\">\r\n             <option value=\"Данила Андреев\" onToggle={() => { setName('Данила Андреев');}}/>\r\n             <option value=\"Другой...\" onToggle={() => { setName('');}}/>\r\n          </datalist>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Сбор завершится</p>\r\n          <div className=\"form-radio\">\r\n            <input onChange={event => {setChecked(event.target.value);}} checked={checked} id=\"radio-1\" type=\"radio\" className=\"more-radio\" value=\"1\" onToggle={() => { setChecked(!checked);}}/>\r\n            <label className=\"label-more\" for=\"radio-1\">Когда соберём сумму</label>\r\n          </div>\r\n          <div className=\"form-radio\">\r\n            <input onChange={event => {setChecked(!event.target.value);}} checked={!checked} id=\"radio-2\" type=\"radio\" className=\"more-radio\" value=\"2\" onToggle={() => { setChecked(!setChecked);}}/>\r\n            <label className=\"label-more\" for=\"radio-2\">В определённую дату</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Дата окончания</p>\r\n          <input type=\"date\" className=\"form-input\" placeholder=\"Выберите дату\" onChange={event => {setDate(event.target.value); }}/>\r\n        </div>\r\n        <footer className=\"Place__footer\">\r\n          <input type=\"button\" value=\"Создать сбор\" className=\"form-button\" onClick={() => { document.location.href = \"/\"}}/>\r\n        </footer>\r\n      </div>\r\n  </React.Fragment>\r\n  );\r\n\r\n} else {\r\n  return (\r\n  <React.Fragment>\r\n      <div className=\"main-more\">\r\n        <div>\r\n          <p className=\"form-text\">Автор</p>\r\n          <input type=\"text\" list=\"names\" className=\"form-input\" value={name}\r\n          onChange={event => {\r\n              setName(event.target.value);\r\n            }}/>\r\n          <datalist id=\"names\">\r\n             <option value=\"Данила Андреев\" onToggle={() => { setName('Данила Андреев');}}/>\r\n             <option value=\"Другой...\" onToggle={() => { setName('');}}/>\r\n          </datalist>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Сбор завершится</p>\r\n          <div className=\"form-radio\">\r\n            <input onChange={event => {setChecked(event.target.value);}} checked={checked} id=\"radio-1\" type=\"radio\" className=\"more-radio\" value=\"1\" onToggle={() => { setChecked(!checked);}}/>\r\n            <label className=\"label-more\" for=\"radio-1\">Когда соберём сумму</label>\r\n          </div>\r\n          <div className=\"form-radio\">\r\n            <input onChange={event => {setChecked(!event.target.value);}} checked={!checked} id=\"radio-2\" type=\"radio\" className=\"more-radio\" value=\"2\" onToggle={() => { setChecked(!setChecked);}}/>\r\n            <label className=\"label-more\" for=\"radio-2\">В определённую дату</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p className=\"form-text\">Дата окончания</p>\r\n          <input type=\"date\" className=\"form-input\" placeholder=\"Выберите дату\" onChange={event => {setDate(event.target.value); }}/>\r\n        </div>\r\n        <footer className=\"Place__footer\">\r\n          <input type=\"button\" value=\"Создать сбор\" className=\"form-button-disabled\" onClick={() => { document.location.href = \"/Publicate\"}} disabled/>\r\n        </footer>\r\n      </div>\r\n  </React.Fragment>\r\n  );\r\n}\r\n};\r\n\r\nexport default More;\r\n\r\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Start from './panels/Start';\nimport Select from './panels/Select';\nimport Target from './panels/Target_fee';\nimport Regular from './panels/Regular_fee';\nimport More from './panels/More';\n\nimport './panels/App.css';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact><Start/></Route>\n\t\t\t\t<Route path=\"/Select\" exact><Select/></Route>\n\t\t\t\t<Route path=\"/Target\" exact><Target/></Route>\n\t\t\t\t<Route path=\"/Regular\" exact><Regular/></Route>\n\t\t\t\t<Route path=\"/More\" exact><More/></Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}